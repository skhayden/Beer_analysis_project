plot(logfit2)
anova(logfit2)
summary(logfit2)
logfit <- lm(log(Height)~log(Force)*Species)
par(mfrow=c(2,2))
plot(logfit)
anova(logfit)
summary(logfit)
?MEAN
?mean
?mean
??"average"
x<-c(1,2,3,4,5)
x
x1<-x+5
x1
mean(x)
mean(x1)
class(x1)
x1.deviations<-x1-mean(x1)
x1.deviations
squ.devation<- x1.deviations^2
sum.squ.dev<-sum(squ.devation)
div.dev<-sqrt(sum.squ.dev/(length(sum.squ.dev)-1))
div.dev
sd(x1)
sessionInfo()
RNGversion()
#Created by Steven Hayden
RNGversion(vstr = )
RNGkind("Wich")
a<-RNGkind("Wich")
a
a<-RNGkind("Wich")
a
a<-RNGkind("Wich")
a
a<-runif(1)
a
a<-runif(1)
a
a<-runif(1)
a
a<-runif(1)
a
a<-runif(1)
a
a<-punif(15)
a
a<-punif(15)
a
a<-punif(15)
a
a<-punif(15)
a
a<-punif(15)
a
a<-rnorm(15)
a
random.DF<-rnorm(15)
random.DF
mean(random.DF)
random.DF<-rnorm(15,mean = 10, sd=2)
random.DF
mean(random.DF)
swirl()
library("swirl", lib.loc="~/R/win-library/3.4")
swirl()
head(flags)
dim (flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-(flags, class)
cls_vect<-(flags class)
cls_vect<-(flags)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply( flag_shapes,range)
slapply( flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(flags,length)
sapply(nique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
Use table(flags$animate)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
read.csv('C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv')
```{r, echo=TRUE}
df<-read.csv('C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv')
df<-read.csv("C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv")
df<-read.csv("C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv")
df<-read.csv("C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv")
df<-read.csv("C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv"
library(readr)
titanic_csv <- read_csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/Datasets/titanic.csv.zip")
View(titanic_csv)
df<- read_csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/Datasets/titanic.csv.zip")
df<-read.csv("C:\Users\shayden\Documents\SMU\Doing data science 1\Unit 3\Homework\awesome-public-datasets\Datasets\titanic.csv")
head(df)
df
```{r, echo=TRUE}
df<- read_csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/Datasets/titanic.csv.zip")
sapply(df$Sex,count)
head(df$Sex)
length(df$Sex='female')
length(df$Sex="female")
length(df$Sex[df$Sex="female"])
length(df[df$Sex="female"])
sapply(df.$sex,length)
sapply(df$sex,length)
sapply(df$Sex,length)
length(df[df$Sex="female"])
nrow(df[df$Sex="female"])
nrow(df[df$Sex=="female"])
length(df[df$Sex=+"female"])
length(df[df$Sex=="female"])
length(df$Sex[df$Sex=="female"])
sapply(df$Sex,length(df$Sex[df$Sex=="female"]))
sapply(df$Sex[df$Sex=="female"],length)
length(df$Sex[df$Sex=="female"])
Female.count<-length(df$Sex[df$Sex=="female"])
Male.count<-length(df$Sex[df$Sex=="male"])
plot(x=Male.count, y=Female.count,xlab='number of male passengers', ylab='number of female passengers', main = 'Male vs femala passegers')
df<- read_csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/Datasets/titanic.csv.zip")
Female.count<-length(df$Sex[df$Sex=="female"])
Male.count<-length(df$Sex[df$Sex=="male"])
barplot(x=Male.count, y=Female.count,xlab='number of male passengers', ylab='number of female passengers', main = 'Male vs female passegers')
Female.count<-length(df$Sex[df$Sex=="female"])
Male.count<-length(df$Sex[df$Sex=="male"])
barplot(x=Male.count, y=Female.count,xlab='number of male passengers', ylab='number of female passengers', main = 'Male vs female passegers')
max(Female.count,Male.count)
Male.count
barplot(max(Female.count,Male.count),width = 2)
barplot(c(Male.count,Female.count),width = 2)
max(Female.count,Male.count)
barplot(c(Male.count,Female.count),width = 2)
barplot(c(Male.count,Female.count),width = 2, axisnames = TRUE)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
library(readr)
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
View(Beers)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
head(Beers)
head(Beers[which(Beers$Beer_ID==na),]
head(Beers[which(Beers$Beer_ID==na),])
head(Beers[which(Beers$Beer_ID=="a"),])
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
head(Beers[which(Beers$Beer_ID=="a"),])
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
head(Beers[is.na(Beers$Beer_ID),])
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
Beers[is.na(Beers$Beer_ID),]
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
Beers[is.na(Beers$Beer_ID),]
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
head(Beers)
Beers[is.na(Beers$Beer_ID),]
head(Beers)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
Beers[is.na(Beers$IBU),]
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
Brewies <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Breweries.csv")
Beer.data<-merge(Beers,Brewies, by.x = c("Brewery_id"), by.y =c("Brew_ID"),all =  FALSE)
head(Beer.data,6)
tail(Beer.data,6)
report.funtion<-function(Age,Duration,RSES){
#Creats objects for caculations
Med.Age<-median(Age,na.rm = TRUE)
Min.dur<-min(Duration,na.rm = TRUE)
Max.dur<-max(Duration,na.rm = TRUE)
SD<-sd(RSES,na.rm = TRUE)
Range.dur<-Max.dur-Min.dur
#Puts together objects into one DF and prits with rounding
Report<-data.frame(Med.Age/5,mean(RSES,na.rm = TRUE)/5,SD/5,Range.dur)
names(Report)<-c("MedianAge","SelfEsteem","SE_SD","DurationRange")
print(Report, didgets=2)
}
report.funtion<-function(Age,Duration,RSES){
#Creats objects for caculations
Med.Age<-median(Age,na.rm = TRUE)
Min.dur<-min(Duration,na.rm = TRUE)
Max.dur<-max(Duration,na.rm = TRUE)
SD<-sd(RSES,na.rm = TRUE)
Range.dur<-Max.dur-Min.dur
#Puts together objects into one DF and prits with rounding
Report<-data.frame(Med.Age/5,mean(RSES,na.rm = TRUE)/5,SD/5,Range.dur)
names(Report)<-c("MedianAge","SelfEsteem","SE_SD","DurationRange")
print(Report, didgets=2)
}
report.funtion(sleep.df$Age,sleep.df$Duration,sleep.df$RSES)
sleep.df<- read.csv("~/SMU/Doing data science 1/Unit 3/sleep_data_01.csv")
report.funtion<-function(Age,Duration,RSES){
#Creats objects for caculations
Med.Age<-median(Age,na.rm = TRUE)
Min.dur<-min(Duration,na.rm = TRUE)
Max.dur<-max(Duration,na.rm = TRUE)
SD<-sd(RSES,na.rm = TRUE)
Range.dur<-Max.dur-Min.dur
#Puts together objects into one DF and prits with rounding
Report<-data.frame(Med.Age/5,mean(RSES,na.rm = TRUE)/5,SD/5,Range.dur)
names(Report)<-c("MedianAge","SelfEsteem","SE_SD","DurationRange")
print(Report, didgets=2)
}
report.funtion(sleep.df$Age,sleep.df$Duration,sleep.df$RSES)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beers.csv")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Data")
#setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy")
Beers <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Data/Beers.csv")
Brewies <- read_csv("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Data/Breweries.csv")
Beer.data<-merge(Beers,Brewies, by.x = c("Brewery_id"), by.y =c("Brew_ID"),all =  FALSE)
head(Beer.data,6)
tail(Beer.data,6)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Data")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
# DDS Case Study 1
#imports data and set the tables to an object
beers_df = read.csv("analysis/Data/Beers.csv")
breweries_df = read.csv("analysis/Data/Breweries.csv")
Beer.data<-merge(Beers,Brewies, by.x = c("Brewery_id"), by.y =c("Brew_ID"),all =  FALSE)
head(Beer.data,6)
tail(Beer.data,6)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
# DDS Case Study 1
#imports data and set the tables to an object
beers_df = read.csv("analysis/Data/Beers.csv")
breweries_df = read.csv("analysis/Data/Breweries.csv")
Beer.data<-merge(Beers,Brewies, by.x = c("Brewery_id"), by.y =c("Brew_ID"),all =  FALSE)
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
# DDS Case Study 1
#imports data and set the tables to an object
beers_df = read.csv("analysis/Data/Beers.csv")
breweries_df = read.csv("analysis/Data/Breweries.csv")
# Clean Data, Make the column name Brewery_id same for both data set.
colnames(breweries_df)[which(names(breweries_df) == "Brew_ID")] <- "Brewery_ID"
colnames(breweries_df)[which(names(breweries_df) == "Name")] <- "Brewery_Name"
colnames(beers_df)[which(names(beers_df) == "Brewery_id")] <- "Brewery_ID"
colnames(beers_df)[which(names(beers_df) == "Name")] <- "Beer_Name"
# 2. Merge beer data with the breweries data.
# Print the first 6 observations and the last six observations to check the merged file.
beer_brew_merge = merge(beers_df, breweries_df, by = c("Brewery_ID"))
# 2. Merge beer data with the breweries data.
# Print the first 6 observations and the last six observations to check the merged file.
beer_brew_merge = merge(beers_df, breweries_df, by = c("Brewery_ID"))
head(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# 2. Merge beer data with the breweries data.
# Print the first 6 observations and the last six observations to check the merged file.
beer_brew_merge = merge(beers_df, breweries_df, by = c("Brewery_ID"))
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Beer_data_Cleaner.Rmd', encoding = 'UTF-8')
# Print the first 6 observations and the last six observations to check the merged file.
source()
# Print the first 6 observations and the last six observations to check the merged file.
source(~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Beer_data_Cleaner.Rmd', encoding = 'UTF-8')
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
#Calls File to import data and clean it.
source("Beer_data_Cleaner.Rmd")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
source("Beer_data_Cleaner.Rmd")
#Calls File to import data and clean it.
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
source("analyis/Beer_data_Cleaner.Rmd")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
source("~analyis/Beer_data_Cleaner.Rmd")
setwd("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project")
source("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analyis/Beer_data_Cleaner.Rmd")
source("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer/ analysis/ project/analyis/Beer_data_Cleaner.Rmd")
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# 2. Merge beer data with the breweries data.
# Print the first 6 observations and the last six observations to check the merged file.
beer_brew_merge = merge(beers_df, breweries_df, by = c("Brewery_ID"))
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# Print the first 6 observations and the last six observations to check the merged file.
head(beer_brew_merge)
tail(beer_brew_merge)
# 3. Report the number of NA's in each column.
colSums(is.na(beer_brew_merge))
head(is.na(beer_brew_merge))
beer_brew_merge[is.na(beer_brew_merge)
beer_brew_merge[is.na(beer_brew_merge)
sapply(beer_brew_merge[is.na(beer_brew_merge),],length)
sapply(beer_brew_merge,length)
beer_brew_merge[is.na(beer_brew_merge),]
colSums(is.na(beer_brew_merge))
#setwd("C:/Users/shayden/Documents/SMU")
df<-read.csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/titanic.csv")
#setwd("C:/Users/shayden/Documents/SMU")
df<-read.csv("~/SMU/Doing data science 1/Unit 3/Homework/awesome-public-datasets/titanic.csv")
Female.count<-length(df$Sex[df$Sex=="female"])
Male.count<-length(df$Sex[df$Sex=="male"])
names(Female.count)<-"Female Count"
names(Male.count)<- "Male Count"
barplot(c(Male.count,Female.count),width = 2,xlab='Gender', ylab='number of passengers', main = 'Male vs female passegers')
df.no.na<-data.frame(df[(!is.na(df$Age)),c("Age","Fare","Survived")])
mean_list <- sapply(df.no.na, mean, rm.na=TRUE)
mean_list
sapply(beer_brew_merge,median,rm.na=TRUE)
sapply(beer_brew_merge$ABV,median,rm.na=TRUE)
median(beer_brew_merge$ABV)
median(beer_brew_merge$ABV,rm.na=TRUE)
median(beer_brew_merge$ABV,rm.na=TRUE)
mean(beer_brew_merge$IBU,na.rm = TRUE)
#sapply(beer_brew_merge$ABV,median,rm.na=TRUE)
median(beer_brew_merge$IBU,na.rm = TRUE)
#sapply(beer_brew_merge$ABV,median,rm.na=TRUE)
bbm = data.table(beer_brew_merge)
str(bbm)
bbm = data.table(beer_brew_merge)
install.packages("tcltk2")
library("tcltk2")
bbm = data.table(beer_brew_merge)
install.packages("RSQLite")
install.packages("tcltk2")
library("tcltk2")
library("RSQLite")
install.packages("tcltk2")
library("tcltk2", lib.loc="~/R/win-library/3.4")
library("RSQLite", lib.loc="~/R/win-library/3.4")
bbm = data.table(beer_brew_merge)
install.packages("data.table")
library("data.table")
bbm = data.table(beer_brew_merge)
str(bbm)
# na.omit(bbm, cols = "ABV")
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max(bbm$ABV,na.rm = TRUE)
bbm[ABV == max_ABV,.(State,ABV)]
bbm[ABV == (max(bbm$ABV,na.rm = TRUE)),.(State,ABV)]
max_ibu = max(bbm[, IBU], na.rm = TRUE)
bbm[IBU == max_ibu, .(State, IBU)]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV)),]
max(beer_brew_merge$ABV)
max(beer_brew_merge$ABV,rm.na=TRUE)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(beer_brew_merge)
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(beer_brew_merge$ABV)
max(beer_brew_merge$ABV)
max(beer_brew_merge$ABV,na.rm = True
max(beer_brew_merge$ABV,na.rm = True)
max(beer_brew_merge$ABV,na.rm = True)
max(beer_brew_merge$ABV,na.rm = TRUE)
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),]
max(beer_brew_merge$ABV,na.rm = TRUE)
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),beer_brew_merge$State]
#####################################
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),beer_brew_merge$State]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),4]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),"State"]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),6]
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),7]
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),8]
#####################################
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),]
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),12]
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),13]
##########################
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),11]
#####################################
#Thejas  let me know if you okay with this line to retun the state with the max
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),10]
a<-beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),]
a
a[,"state"]
a[,"State"]
#changed function from SQL function
Median.ABV<-median(beer_brew_merge$ABV,na.rm = TRUE)
Median.IBU<-median(beer_brew_merge$IBU,na.rm=TRUE)
bbm = data.table(beer_brew_merge)
str(bbm)
# na.omit(bbm, cols = "ABV")
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max(bbm$ABV,na.rm = TRUE)
bbm[ABV == max_ABV,.(State,ABV)]
bbm[ABV == (max(bbm$ABV,na.rm = TRUE)),.(State,ABV)]
max_ibu = max(bbm[, IBU], na.rm = TRUE)
bbm[IBU == max_ibu, .(State, IBU)]
beer_brew_merge[which(beer_brew_merge$ABV==max(beer_brew_merge$ABV,na.rm = TRUE)),"State"]
bbm = data.table(beer_brew_merge)
str(bbm)
# na.omit(bbm, cols = "ABV")
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max(bbm$ABV,na.rm = TRUE)
bbm[ABV == max_ABV,.(State,ABV)]
bbm[ABV == (max(bbm$ABV,na.rm = TRUE)),.(State,ABV)]
max_ibu = max(bbm[, IBU], na.rm = TRUE)
bbm[IBU == max_ibu, .(State, IBU)]
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max_ABV <- max(bbm[, ABV],na.rm = TRUE)
max(bbm$ABV,na.rm = TRUE)
bbm[ABV == max_ABV,.(State,ABV)]
bbm[ABV == (max(bbm$ABV,na.rm = TRUE)),.(State,ABV)]
max_ibu = max(bbm[, IBU], na.rm = TRUE)
bbm[IBU == max_ibu, .(State, IBU)]
#Alternitive methode
bbm = data.table(beer_brew_merge)
max_ibu = max(bbm[, IBU], na.rm = TRUE)
bbm[IBU == max_ibu, .(State, IBU)]
#names(df)
#ncol(df)
major_count<-tapply(df$major_category,df$major_category,length)
# use install.packages("fivethirtyeight") to install pakace befor running code.
library(fivethirtyeight)
data(package = "fivethirtyeight")
df<-college_recent_grads
vignette("fivethirtyeight", package = "fivethirtyeight")
data(package = "fivethirtyeight")
df<-college_recent_grads
vignette("fivethirtyeight", package = "fivethirtyeight")
df.dimension <-dim(df)
names(df.dimension)<-c("Rows","Columns")
df.dimension
#names(df)
#ncol(df)
major_count<-tapply(df$major_category,df$major_category,length)
#par(les=2)
par(mar=c(5.1, 17, 4.1, 2.1), mgp=c(15, 1, 0), las=2)
barplot(major_count,length(major_count),horiz = TRUE, main = "count of majors by category",xlab = "Count",ylab = "Category",col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"))
source("~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis/ project/analyis/Beer_data_Cleaner.Rmd")
source('~/GitHub/SMU/Doing_Data_Science_1/CaseStudy/Beer analysis project/analysis/Beer_data_Cleaner.Rmd', encoding = 'UTF-8')
